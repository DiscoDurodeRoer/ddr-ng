{
    "description.showcase": "Description",
    "examples.showcase": "Examples",
    "code.showcase": "Code",
    "inputs.showcase": "Inputs",
    "outputs.showcase": "Outputs",
    "translations.showcase": "Translations",
    "templates.showcase": "Templates",
    "slots.showcase": "Slots",
    "classes.showcase": "Classes",
    "service.showcase": "Service",
    "styles.showcase": "Styles",
    "inputs.name.showcase": "Name",
    "inputs.component.showcase": "Component",
    "inputs.description.showcase": "Description",
    "inputs.type.showcase": "Type",
    "inputs.required.showcase": "Required",
    "inputs.default.showcase": "Default value",
    "inputs.values.showcase": "Possible values",
    "outputs.name.showcase": "Name",
    "outputs.component.showcase": "Component",
    "outputs.description.showcase": "Description",
    "outputs.return.showcase": "Returned value",
    "service.name.showcase": "Method name",
    "service.description.showcase": "Description",
    "templates.component.showcase": "Component",
    "templates.name.showcase": "Name",
    "templates.description.showcase": "Description",
    "slots.selector.showcase": "Selector",
    "slots.description.showcase": "Description",
    "translations.key.showcase": "Name key",
    "translations.description.showcase": "Description",
    "styles.class.showcase": "Class",
    "styles.description.showcase": "Description",
    "component.showcase": "Component",
    "pipe.showcase": "Pipe",
    "directive.showcase": "Directive",
    "accordion.description": "Collapsible data container component.",
    "accordion.example.1": "Example 1: Standard",
    "accordion.example.2": "Example 2: Open",
    "accordion.example.3": "Example 3: Borderless and shadowless",
    "accordion.example.4": "Example 4: Slim mode",
    "accordion.example.5": "Example 5: Event",
    "accordion.title": "Accordion Example",
    "accordion.input.titleAccordion": "Accordion title",
    "accordion.input.slim": "Displays the accordion in a slimmer style",
    "accordion.output.clickopen": "Event triggered when opening/closing the accordion",
    "accordion.slot.content": "Accordion content",
    "accordion.style.accordion": "Main container of the accordion",
    "accordion.style.shadow": "Accordion shadow",
    "accordion.style.title": "Accordion title container",
    "accordion.style.title.opened": "Title container when the accordion is opened",
    "accordion.style.title.closed": "Title container when the accordion is closed",
    "accordion.style.slim": "Slim accordion",
    "accordion.style.title.icon": "Accordion icon",
    "accordion.style.content": "Accordion content container",
    "accordion.style.content.is.opened": "Content container when the accordion is opened",
    "accordion.style.content.is.closed": "Content container when the accordion is closed",
    "accordion.style.content.slim": "Slim accordion content",
    "badge.description": "Component to display information to the user as a label.",
    "badge.example.1": "Example 1: Standard",
    "badge.example.2": "Example 2: Sizes",
    "badge.example.3": "Example 3: Custom class",
    "badge.example.4": "Example 4: Custom background",
    "badge.example.5": "Example 5: Non-clickable",
    "badge.example.6": "Example 6: Template",
    "badge.input.text": "Text inside the badge",
    "badge.input.customclass": "Custom class for the badge",
    "badge.input.type": "Predefined type of the badge",
    "badge.input.size": "Text size of the badge",
    "badge.input.canclick": "Indicates whether it can be clicked or not",
    "badge.input.background": "Background color of the badge",
    "badge.output.clickbadge": "Event triggered when clicking the badge",
    "badge.template.template": "Badge content",
    "badge.style.badge": "Badge container",
    "badge.style.clickable": "Badge when clickable",
    "badge.style.info": "Badge used to display information",
    "badge.style.danger": "Badge used to display danger information",
    "badge.style.warning": "Badge used to display warning information",
    "badge.style.success": "Badge used to display success information",
    "badge.style.small": "Small badge",
    "badge.style.medium": "Medium badge",
    "badge.style.large": "Large badge",
    "detail.description": "Component to display a detail with custom information to the user.",
    "detail.open": "Open detail",
    "detail.opening": "Opening detail",
    "detail.closing": "Closing detail",
    "detail.orientation": "Detail orientation",
    "detail.input.id": "Detail ID. Required to open the detail",
    "detail.input.orientation": "Orientation from which the detail appears",
    "detail.output.close": "Event triggered when closing the detail",
    "detail.service.add": "Adds a detail to the list of details",
    "detail.service.remove": "Removes a detail from the list of details",
    "detail.service.open": "Opens a detail from the list of details. It must be in the list",
    "detail.service.close": "Closes a detail from the list of details. It must be in the list",
    "detail.slot.title": "Content of the detail title",
    "detail.slot.content": "Content of the detail",
    "detail.title.example": "Example detail title",
    "detail.content.example.1": "Example detail content",
    "detail.content.example.2": "Click the X icon or outside the detail to close it",
    "detail.styles.detail": "Main container of the detail",
    "detail.styles.content": "Container for the detail content",
    "detail.styles.title": "Container for the detail title",
    "detail.styles.close": "Detail close button",
    "card.description": "Component to display information in a card, allowing data customization.",
    "card.example.1": "Example 1: Standard",
    "card.example.2": "Example 2: No header",
    "card.example.3": "Example 3: Footer",
    "card.example.4": "Example 4: No rounding",
    "card.example.5": "Example 5: No border",
    "card.example.6": "Example 6: No shadow",
    "card.example.7": "Example 7: Background and color",
    "card.title": "Header",
    "card.footer": "Footer",
    "card.input.showheader": "Displays the card header",
    "card.input.showfooter": "Displays the card footer",
    "card.input.rounded": "Indicates whether the card border is rounded",
    "card.input.border": "Indicates whether the card has a border",
    "card.input.shadow": "Indicates whether the card has a shadow",
    "card.input.background": "Allows modifying the card's background",
    "card.input.color": "Allows modifying the card's text color",
    "card.slot.title": "Card header content",
    "card.slot.content": "Card content",
    "card.slot.footer": "Card footer content",
    "card.style.card": "Main container of the card",
    "card.style.rounded": "Card with rounded corners",
    "card.style.shadow": "Card with shadow",
    "card.style.title": "Container for the card title",
    "card.style.body": "Container for the card body",
    "card.style.footer": "Container for the card footer",
    "chip.description": "Component to store multiple values through an input.",
    "chip.example.1": "Example 1: Standard",
    "chip.example.2": "Example 2: Initial values",
    "chip.example.3": "Example 3: Separator",
    "chip.example.4": "Example 4: Maximum number of values",
    "chip.example.5": "Example 5: Do not allow deleting values",
    "chip.example.6": "Example 6: Event when inserting an item",
    "chip.example.7": "Example 7: Event when removing an item",
    "chip.example.8": "Example 8: Event when clicking an item",
    "chip.example.9": "Example 9: Event when changing an item",
    "chip.enter": "Press Enter to add a new item",
    "chip.example": "Example",
    "chip.elements": "Elements",
    "chip.selected.element": "Selected item",
    "chip.separator": "Type a comma to add a new item",
    "chip.max.elements": "You can only enter up to 5 items",
    "chip.insert.element": "Item inserted",
    "chip.remove.element": "Item removed",
    "chip.input.label": "Input label",
    "chip.input.maxvalues": "Maximum number of values to store. 0 for unlimited items",
    "chip.input.separator": "String used to separate values",
    "chip.input.name": "Name chip",
    "chip.input.readonly": "Prevents the user from typing in the input",
    "chip.input.candelete": "Indicates whether items can be deleted",
    "chip.output.insertvalue": "Event triggered when a value is inserted",
    "chip.output.clickvalue": "Event triggered when a value is clicked",
    "chip.output.removevalue":"Event triggered when a value is removed",
    "chip.output.getvalues": "Event that returns all values when there's a change",
    "chip.style.chip": "Main container of the chip",
    "chip.style.label": "Chip label",
    "chip.style.container": "Chip container",
    "chip.style.container.values": "Container for the chip values",
    "chip.style.container.input": "Container for the chip input",
    "modal.description": "Component to display modals. Use the service to show or hide them.",
    "modal.clickoutside": "Click outside the modal",
    "modal.open": "Open modal",
    "modal.opened": "Modal opened",
    "modal.closed": "Modal closed",
    "modal.size": "Size",
    "modal.type": "Type",
    "modal.size.button": "Button size",
    "modal.confirm": "Confirm",
    "modal.close": "Close",
    "modal.input.id": "Modal ID. Required to open the modal",
    "modal.input.type": "Modal type",
    "modal.input.labelconfirm": "Confirm button text",
    "modal.input.labelclose": "Close button text",
    "modal.input.clickoutsideenabled": "Enables the click outside event",
    "modal.input.size": "Modal size",
    "modal.input.sizebutton": "Modal button size",
    "modal.output.close": "Event triggered when closing the modal",
    "modal.output.accept": "Event triggered when confirming the modal",
    "modal.output.clickoutside": "Event triggered when clicking outside the modal",
    "modal.service.add": "Adds the modal to the list of modals",
    "modal.service.remove": "Removes the modal from the list of modals",
    "modal.service.open": "Opens a modal from the list of modals. It must be in the list",
    "modal.service.close": "Closes a modal from the list of modals. It must be in the list",
    "modal.slot.title": "Modal title content",
    "modal.slot.content": "Modal content",
    "modal.style.modal": "Modal container",
    "modal.style.content": "Modal card container",
    "modal.style.large": "Large modal",
    "modal.style.medium": "Medium modal",
    "modal.style.small": "Small modal",
    "modal.style.content.title": "Modal title container",
    "modal.style.content.close": "Modal close button",
    "modal.style.content.card.buttons": "Modal buttons container",
    "modal.style.content.card.buttons.button": "Modal buttons",
    "no.data.description": "Component to indicate that there is no data.",
    "no.data.text": "No data",
    "no.data.size": "Icon and text size",
    "no.data.input.icon": "Icon to display",
    "no.data.input.text": "Text to display",
    "no.data.input.size": "Size of the icon and text",
    "no.data.style.no.data": "Main container",
    "no.data.style.large": "Large icon and text",
    "no.data.style.medium": "Medium icon and text",
    "no.data.style.small": "Small icon and text",
    "no.data.style.icon": "Icon",
    "no.data.style.text": "Text",
    "steps.description": "Component to display information divided into different steps.",
    "steps.example.1": "Example 1: Standard",
    "steps.example.2": "Example 2: Validation",
    "steps.example.3": "Example 3: Step skipping",
    "steps.example.4": "Example 4: Vertical",
    "steps.example.5": "Example 5: Step change event",
    "steps.example.6": "Example 6: Event when reaching the last step",
    "steps.example.7": "Example 7: No buttons",
    "steps.example.8": "Example 8: Step validation with icon",
    "steps.next": "Next",
    "steps.previous": "Previous",
    "step.last": "Last step",
    "step.1": "Step 1",
    "step.2": "Step 2",
    "step.3": "Step 3",
    "step.name": "Name",
    "step.age": "Age",
    "steps.input.vertical": "Indicates whether the steps are displayed vertically",
    "steps.input.canjumpstep": "Indicates whether steps can be skipped",
    "steps.input.labelnext": "Label for the next button",
    "steps.input.labelprevious": "Label for the previous button",
    "steps.input.validateicon": "Displays an icon indicating the step is validated",
    "steps.input.showbuttons": "Displays the next/previous buttons",
    "steps.input.titlestep": "Step title",
    "steps.input.cangonext": "Indicates whether it's possible to go to the next step",
    "steps.output.changestep": "Event triggered when changing steps",
    "steps.output.laststep": "Event triggered when reaching the last step",
    "steps.templates.stepcontent": "Content step",
    "steps.translation.next": "Text for the next button",
    "steps.translation.previous": "Text for the previous button",
    "steps.style.steps": "Steps container",
    "steps.style.horizontal": "Steps in horizontal format",
    "steps.style.horizontal.info.step": "Step information in horizontal mode",
    "steps.style.horizontal.step.hover": "When steps can be skipped in horizontal mode",
    "steps.style.horizontal.step.number": "Step number in horizontal mode",
    "steps.style.horizontal.step.open": "Step when open in horizontal mode",
    "steps.style.horizontal.step.closed": "Step when closed in horizontal mode",
    "steps.style.horizontal.title.step": "Step title in horizontal mode",
    "steps.style.horizontal.line": "Line separating steps in horizontal mode",
    "steps.style.template": "Steps template",
    "steps.style.template.content": "Steps template content",
    "steps.style.vertical.info.step": "Step information in vertical mode",
    "steps.style.vertical.info.step.hover": "When steps can be skipped in vertical mode",
    "steps.style.vertical.info.step.number": "Step number in vertical mode",
    "steps.style.vertical.info.step.number.open": "Step when open in vertical mode",
    "steps.style.vertical.info.step.number.closed": "Step when closed in vertical mode",
    "steps.style.vertical.info.step.number.title.step": "Step title in vertical mode",
    "tabs.description": "Component to display information divided into different tabs.",
    "tabs.example.1": "Example 1: Standard",
    "tabs.example.2": "Example 2: Icons",
    "tabs.example.3": "Example 3: Events",
    "tabs.1": "Tab 1",
    "tabs.2": "Tab 2",
    "tabs.3": "Tab 3",
    "tabs.input.titleTab": "Tab title",
    "tabs.input.icon": "Tab icon",
    "tabs.output.changetab": "Event triggered when changing the tab",
    "tabs.template.tabcontent": "Tab content",
    "tabs.style.tabs": "Tabs container",
    "tabs.style.title": "Tab title container",
    "tabs.style.title.selected": "Selected tab title",
    "tabs.style.content": "Tab content container",
    "table.description": "Component to display information in a table.",
    "table.example.1": "Example 1: Standard",
    "table.example.2": "Example 2: Without pagination and without changing rows",
    "table.example.3": "Example 3: Prevent row selection",
    "table.example.4": "Example 4: Borderless",
    "table.example.5": "Example 5: Multiple",
    "table.example.6": "Example 6: Template",
    "table.example.7": "Example 7: Nested properties",
    "table.example.8": "Example 8: Actions",
    "table.example.9": "Example 9: Empty table",
    "table.example.10": "Example 10: Pagination event",
    "table.example.11": "Example 11: Sorting",
    "table.name": "Name",
    "table.name.tooltip": "Person's name",
    "table.surname": "Surname",
    "table.surname.tooltip": "Person's surname",
    "table.age": "Age",
    "table.age.tooltip": "Person's age",
    "table.weight": "Weight",
    "table.weight.tooltip": "Person's weight",
    "table.documentation": "Documentation",
    "table.documentation.nif": "Person's documentation",
    "table.select.item": "Selected item",
    "table.multiple.select.item": "Multiple selected items",
    "table.sort": "Sorted table",
    "table.select.action": "Selected action",
    "table.action.save": "Save",
    "table.action.update": "Update",
    "table.action.delete": "Delete",
    "table.to": "to",
    "table.of": "of",
    "table.registers": "records",
    "table.register": "record",
    "table.empty": "No results",
    "table.change.page": "Page changed",
    "table.change.rows": "Rows per page changed",
    "table.input.cols": "Table columns",
    "table.input.items": "Table rows",
    "table.input.showpagination": "Indicates whether to show pagination",
    "table.input.optionsrowspagination": "Rows per page options",
    "table.input.showtotal": "Show total number of records",
    "table.input.allowchangerows": "Indicates whether the number of rows can be changed",
    "table.input.multiple": "Indicates whether more than one record can be selected",
    "table.input.showactions": "Row actions",
    "table.input.labelnoresults": "Text when no rows are available",
    "table.input.totalitems": "Total number of records. Recommended for server-side pagination. By default, uses the length of the records",
    "table.input.cansort": "Indicates whether records can be sorted",
    "table.input.showborder": "Indicates whether to show table border",
    "table.input.showfooter": "Indicates whether to show table footer",
    "table.input.canselectitems": "Indicates whether table records can be selected",
    "table.input.startpagezero": "Indicates whether pagination starts at 0. By default, starts at 1",
    "table.input.page": "Initial pagination page",
    "table.input.labelregisters": "Text referring to records (plural)",
    "table.input.labelregister": "Text referring to record (singular)",
    "table.input.labeltopagination": "Text between current page and number of records",
    "table.input.labelofpagination": "Text between records per page and total records",
    "table.output.selectitem": "Event when a row is selected",
    "table.output.selectmultipleitem": "Event when multiple rows are selected via checkbox. Only in multiple mode",
    "table.output.selectaction": "Event when an action is selected",
    "table.output.changepage": "Event when page changes",
    "table.output.changerow": "Event when number of rows changes",
    "table.output.sort": "Event when data is sorted by a column",
    "table.translation.to": "Text between current page and number of records",
    "table.translation.of": "Text between records on page and total records",
    "table.translation.register": "Text referring to record (singular)",
    "table.translation.registers": "Text referring to records (plural)",
    "table.template.itemtemplate": "Table cell content",
    "table.style.table": "Table container",
    "table.style.table.table": "Table",
    "table.style.header.row": "Table header row container",
    "table.style.header.row.checkbox": "Table header checkbox",
    "table.style.header.cell": "Table header cell",
    "table.style.header.cell.tooltip": "Table header tooltip icon",
    "table.style.header.cell.sort": "Table header sort icon",
    "table.style.body.row": "Table body row container",
    "table.style.border": "Table border",
    "table.style.body.row.hoveable": "When hovering over a table row",
    "table.style.body.row.checkbox": "Table row checkbox",
    "table.style.body.cell": "Table body cell",
    "table.style.body.cell.title.mobile": "Table cell header in mobile format",
    "table.style.body.cell.text.mobile": "Table cell text in mobile format",
    "table.style.body.row.actions": "Actions at the end of the table row",
    "table.style.foot.row": "Table footer row container",
    "table.style.foot.cell": "Table footer cell",
    "tree.description": "Component to display data in a tree structure.",
    "tree.example.1": "Example 1: Standard",
    "tree.example.2": "Example 2: Borders",
    "tree.example.3": "Example 3: Icons",
    "tree.example.4": "Example 4: Actions",
    "tree.example.5": "Example 5: Actions only on children",
    "tree.example.6": "Example 6: Template",
    "tree.example.7": "Example 7: Click event",
    "tree.example.8": "Example 8: Prevent click",
    "tree.example.9": "Example 9: Empty",
    "tree.example.10": "Example 10: Transparent",
    "tree.action.update": "Update",
    "tree.action.delete": "Delete",
    "tree.value": "Value",
    "tree.empty": "Empty tree",
    "tree.input.nodes": "Nodes containing the information to display",
    "tree.input.border": "Indicates whether the items have borders",
    "tree.input.actionsonlyleafs": "Only leaf nodes have actions",
    "tree.input.open": "Nodes are open or closed initially",
    "tree.input.canclick": "Indicates whether nodes can be clicked",
    "tree.input.transparent": "Tree transparent",
    "tree.output.selectaction": "Event triggered when an action is selected",
    "tree.translation.no.data": "Text shown when there is no data",
    "tree.template.templatenode": "Content after the label. Only for nodes without children",
    "tree.style.tree": "Tree container",
    "tree.style.no.data": "Container when there is no data in the tree",
    "tree.style.container": "Container for all tree nodes block",
    "tree.style.container.node": "Tree node container",
    "tree.style.container.node.content": "Container for the tree node content",
    "tree.style.container.node.content.icon": "Node icon",
    "tree.style.container.node.content.text": "Node text",
    "tree.style.container.node.content.custom": "Custom content of the tree",
    "tree.style.container.node.actions": "Actions for the tree node",
    "tree.style.tree.transparent": "Tree transparent",
    "button.description": "Component that represents a button, used to perform actions.",
    "button.example.1": "Example 1: Standard",
    "button.example.2": "Example 2: Icon",
    "button.example.3": "Example 3: Modes",
    "button.example.4": "Example 4: Disabled",
    "button.example.5": "Example 5: Floating Button (Bottom right)",
    "button.example.6": "Example 6: Submit",
    "button.example.7": "Example 7: Block",
    "button.example.8": "Example 8: Sizes",
    "button.example.9": "Example 9: Tooltip",
    "button.example.10": "Example 10: Transparent",
    "button.example.11": "Example 11: Icon on the right",
    "button.example.12": "Example 12: Image",
    "button.click": "Button clicked",
    "button.text": "Button",
    "button.submit": "Submit button",
    "button.form.submit": "Form submitted",
    "button.large": "Large",
    "button.medium": "Medium",
    "button.small": "Small",
    "button.tooltip": "Button tooltip",
    "button.input.text": "Button text",
    "button.input.type": "Button type",
    "button.input.icon": "Button icon",
    "button.input.block": "Button takes full width",
    "button.input.disabled": "Indicates whether the button is disabled",
    "button.input.mode": "Button mode",
    "button.input.size": "Button size",
    "button.input.floatbutton": "Button floats in the specified position",
    "button.input.iconposition": "Icon position",
    "button.input.position": "Floating button position",
    "button.input.img": "Button image",
    "button.input.tooltiptext": "Tooltip text",
    "button.input.tooltipOrientation": "Tooltip orientation",
    "button.input.transparent": "Displays the button with transparent style",
    "button.input.border": "Adds a border to the button",
    "button.output.action": "Event triggered when the button is clicked",
    "button.style.button": "Component button",
    "button.style.mode.default": "Button with the default style",
    "button.style.mode.save": "Button styled for save actions",
    "button.style.mode.danger": "Button styled for dangerous or destructive actions",
    "button.style.block": "Button that takes up the full width of the container",
    "button.style.inline": "Button displayed inline with other elements",
    "button.style.border": "Button with a visible border",
    "button.style.without.border": "Button without a border",
    "button.style.small": "Small-sized button",
    "button.style.medium": "Medium-sized button",
    "button.style.large": "Large-sized button",
    "button.style.disabled": "Button in a disabled state",
    "button.style.float.button": "Floating button",
    "button.style.float.button.bottom.left": "Floating button at the bottom left",
    "button.style.float.button.bottom.center": "Floating button at the bottom center",
    "button.style.float.button.bottom.right": "Floating button at the bottom right",
    "button.style.float.button.top.left": "Floating button at the top left",
    "button.style.float.button.top.center": "Floating button at the top center",
    "button.style.float.button.top.right": "Floating button at the top right",
    "button.style.transparent": "Transparent button",
    "button.style.icon": "Button icon",
    "button.style.icon.right": "Icon on the right side of the button",
    "button.style.icon.left": "Icon on the left side of the button",
    "button.style.float.button.items": "Floating button content",
    "button.style.img": "Button image",
    "button.style.text": "Button text",
    "button.multiple.description": "Component to group multiple buttons into one and execute different actions.",
    "button.multiple.example.1": "Example 1: Standard",
    "button.multiple.example.2": "Example 2: Icons only",
    "button.multiple.example.3": "Example 3: One button",
    "button.multiple.example.4": "Example 4: Selected button",
    "button.multiple.example.5": "Example 5: Sizes",
    "button.multiple.example.6": "Example 6: Transparent",
    "button.multiple.input.buttons": "Buttons to display",
    "button.multiple.input.size": "Size of the buttons",
    "button.multiple.input.showselectedbutton": "The button remains selected when clicked.",
    "button.multiple.input.transparent": "Buttons will be transparent",
    "button.multiple.output.action": "Event triggered when clicking one of the buttons",
    "button.multiple.style.multiple.button": "Main container of the multiple button",
    "button.multiple.style.selected": "Selected button",
    "button.multiple.style.first.button": "First button",
    "button.multiple.style.intermediate.button": "Intermediate buttons",
    "button.multiple.style.last.button": "Last button",
    "button.multiple.1": "Button 1",
    "button.multiple.2": "Button 2",
    "button.multiple.3": "Button 3",
    "button.multiple.4": "Button 4",
    "button.split.description": "Component that displays different actions in a button.",
    "button.split.example.1": "Example 1: Standard",
    "button.split.example.2": "Example 2: Show only icon in the first action",
    "button.split.example.3": "Example 3: Transparent",
    "button.split.example.4": "Example 4: Transparent and without border",
    "button.split.example.5": "Example 5: Do not show first action in the options list",
    "button.split.example.6": "Example 6: Sizes",
    "button.split.example.7": "Example 7: Positions",
    "button.split.example.8": "Example 8: Disabled",
    "button.split.example.9": "Example 9: Change icon to display options",
    "button.split.example.10": "Example 10: Do not show the first button",
    "button.split.example.11": "Example 11: Only show icons in the options list",
    "button.split.example.12": "Example 12: Event when expanding and collapsing the options",
    "button.split.save": "Save",
    "button.split.update": "Update",
    "button.split.delete": "Delete",
    "button.split.open": "Options list opened",
    "button.split.close": "Options list closed",
    "button.split.input.showfirst": "Show the first button",
    "button.split.input.showfirstinoptions": "Include the first button in the options list",
    "button.split.input.showfirstonlyicon": "Show only the icon of the first button",
    "button.split.input.showonlyicon": "Show only icons in the options list",
    "button.split.input.transparent": "Indicates if the split button is transparent",
    "button.split.input.size": "Size of the split button",
    "button.split.input.border": "Border of the split button",
    "button.split.input.disabled": "Indicates if the split button is disabled",
    "button.split.input.actions": "Actions to display. The first one will be the default action",
    "button.split.input.position": "Position of the options list when displayed",
    "button.split.input.iconshowoptions": "Icon to display the options",
    "button.split.output.selectaction": "Event triggered when an action is selected",
    "button.split.output.openactions": "Event triggered when the options are expanded or collapsed",
    "button.split.style.button.split": "Main container of the split button",
    "button.split.style.transparent": "Split button in transparent state",
    "button.split.style.without.border": "Split button without border",
    "button.split.style.action.principal": "Main button of the split button",
    "button.split.style.more.actions": "Main button next to the button that shows more options",
    "button.split.style.action.secondaries": "Button to expand the rest of the options",
    "button.split.style.action.secondaries.without.border.left": "Main split button without left border",
    "button.split.style.position.bottom.right": "Options positioned at bottom right",
    "button.split.style.position.bottom.left": "Options positioned at bottom left",
    "button.split.style.position.top.left": "Options positioned at top left",
    "button.split.style.position.top.right": "Options positioned at top right",
    "button.split.style.with.text": "Text inside the options",
    "input.description": "Component for user data input.",
    "input.example.1": "Example 1: Standard",
    "input.example.2": "Example 2: Inline",
    "input.example.3": "Example 3: Required",
    "input.example.4": "Example 4: Without border",
    "input.example.5": "Example 5: Validation",
    "input.example.6": "Example 6: Inline validation",
    "input.example.7": "Example 7: Disabled",
    "input.example.8": "Example 8: Readonly",
    "input.example.9": "Example 9: min and max",
    "input.example.10": "Example 10: Bold label",
    "input.example.11": "Example 11: Tooltip",
    "input.example.12": "Example 12: Events",
    "input.example.13": "Example 13: Sizes",
    "input.example.14": "Ejemplo 14: Focus",
    "input.example.15": "Example 15: Transparent",
    "input.ok": "Valid",
    "input.value.required": "Value required",
    "input.value": "Value",
    "input.placeholder": "Type a text...",
    "input.placeholder.number": "Type a number...",
    "input.label": "Text",
    "input.tooltip": "Tooltip text",
    "input.event.click": "Click on the input",
    "input.keypressed": "Keypressed event",
    "input.minlength.required": "Required length: ",
    "input.minlength.actual": "Current length: ",
    "input.input.placeholder": "Text shown when the input is empty",
    "input.focus": "Set focus",
    "input.input.label": "Label associated with the input",
    "input.input.type": "Input type",
    "input.input.disabled": "Indicates if the input is disabled",
    "input.input.readonly": "Prevents the user from typing in the input",
    "input.input.maxlength": "Maximum length of the input",
    "input.input.minlength": "Minimum length of the input",
    "input.input.required": "Indicates if the field is required",
    "input.input.validate": "Enables input validation",
    "input.input.inline": "Displays label and input in a single line",
    "input.input.border": "Indicates if the input has a border",
    "input.input.pattern": "Validation pattern. Only if the input is being validated",
    "input.input.labelbold": "Displays the label in bold",
    "input.input.tooltiptext": "Tooltip text for the input",
    "input.input.tooltipOrientation": "Tooltip orientation",
    "input.input.name": "Input name",
    "input.input.size": "Input size",
    "input.input.max": "Minimum numeric value of the input",
    "input.input.min": "Maximum numeric value of the input",
    "input.input.focus": "Focuses the input",
    "input.input.transparent": "Makes the input transparent",
    "input.input.autocomplete": "Indicates that the input can autocomplete text",
    "input.output.haserrors": "Event with the type of error emitted by the input. 0=Neutral 1=Error 2=Valid",
    "input.output.clickinput": "Event triggered when clicking on the input",
    "input.output.keypressed": "Event triggered on key press and release in the input. Returns the value in the input",
    "input.output.focuslost": "Event triggered when focus is lost",
    "input.template.templatevalid": "Content when the input is valid",
    "input.template.templateerrors": "Content when the input is invalid",
    "input.styles.input": "Main container",
    "input.styles.container": "Input container",
    "input.styles.container.inline": "Input container when in inline mode",
    "input.styles.container.label": "Input label",
    "input.styles.container.label.inline": "Label in inline mode",
    "input.styles.container.label.transparent": "Label transparent",
    "input.styles.container.input": "Input",
    "input.styles.container.input.border": "Input border",
    "input.styles.container.input.without.border": "Input without border",
    "input.styles.container.input.small": "Small input",
    "input.styles.container.input.medium": "Medium input",
    "input.styles.container.input.large": "Large input",
    "input.styles.container.input.inline": "Inline input",
    "input.styles.container.input.disabled": "Input when disabled",
    "input.styles.container.input.transparent": "Transparent input",
    "input.styles.container.input.border.transparent": "Input border when transparent",
    "input.group.description": "Component for user input with an associated button to perform actions.",
    "input.group.example.1": "Example 1: Standard",
    "input.group.example.2": "Example 2: Validation",
    "input.group.example.3": "Example 3: Inline",
    "input.group.example.4": "Example 4: Disabled",
    "input.group.example.5": "Example 5: Disabled button",
    "input.group.example.6": "Example 6: Tooltip",
    "input.group.example.7": "Example 7: Bold label",
    "input.group.example.8": "Example 8: min and max",
    "input.group.example.9": "Example 9: Events",
    "input.group.example.10": "Example 10: Size",
    "input.group.example.11": "Example 11: Focus",
    "input.group.example.12": "Example 12: Transparent",
    "input.group.ok": "Valid",
    "input.group.value": "Value",
    "input.group.value.required": "Value required",
    "input.group.minlength.required": "Required length: ",
    "input.group.minlength.actual": "Current length: ",
    "input.group.label": "Text",
    "input.group.placeholder": "Type a text...",
    "input.group.tooltip": "Tooltip text",
    "input.group.click": "Click on the input button",
    "input.group.event.click": "Click on the input",
    "input.group.keypressed": "Keypressed event",    
    "input.group.focus": "Put focus",
    "input.group.input.label": "Label associated with the input group",
    "input.group.input.icon": "Icon of the input group button",
    "input.group.input.name": "Name of the input group",
    "input.group.input.placeholder": "Text when the input group is empty",
    "input.group.input.type": "Input group type",
    "input.group.input.validate": "Enables validation of the input group",
    "input.group.input.required": "Indicates whether the input group is required",
    "input.group.input.readonly": "Prevents the user from typing in the input",
    "input.group.input.pattern": "Pattern to validate. Only if the input group is being validated",
    "input.group.input.maxlength": "Maximum length of the input group",
    "input.group.input.minlength": "Minimum length of the input group",
    "input.group.input.inline": "Displays the label and the input group on a single line",
    "input.group.input.disabled": "Indicates whether the input group is disabled",
    "input.group.input.disabledbutton": "Indicates whether the input group button is disabled",
    "input.group.input.tooltiptext": "Tooltip text of the input",
    "input.group.input.labelbold": "Displays the label in bold",
    "input.group.input.min": "Minimum numeric value of the input",
    "input.group.input.max": "Maximum numeric value of the input",
    "input.group.input.size": "Input group size",
    "input.group.input.focus": "Sets focus on the input group",
    "input.group.input.transparent": "Makes the input group transparent",
    "input.group.input.autocomplete": "Indicates that the input can autocomplete text",
    "input.group.output.haserrors": "Event with the type of error sent by the input group. 0=Neutral 1=Error 2=Valid",
    "input.group.output.action": "Event triggered on button click",
    "input.group.output.clickinput": "Event triggered when clicking on the input group",
    "input.group.output.keypressed": "Event triggered on key press and release in the input. Returns the value in the input",
    "input.group.output.focuslost": "Event triggered when the input group loses focus",
    "input.group.template.templatevalid": "Content when the input group is valid",
    "input.group.template.templateerrors": "Content when the input group is invalid",
    "input.group.style": "Input group container",
    "input.group.style.input": "Input of the input group",
    "input.group.style.button": "Button of the input group",
    "input.group.style.button.is.valid": "Button when valid",
    "input.group.style.button.is.invalid": "Button when invalid",
    "input.password.description": "Component for password input that can optionally be displayed as text.",
    "input.password.example.1": "Example 1: Standard",
    "input.password.example.2": "Example 2: Validation",
    "input.password.example.3": "Example 3: Inline",
    "input.password.example.4": "Example 4: Disabled",
    "input.password.example.5": "Example 5: Readonly",
    "input.password.example.6": "Example 6: Show password",
    "input.password.example.7": "Example 7: Tooltip",
    "input.password.example.8": "Example 8: Bold label",
    "input.password.example.9": "Example 9: Events",
    "input.password.label": "Text",
    "input.password.placeholder": "Type a text...",
    "input.password.ok": "Valid",
    "input.password.value": "Value",
    "input.password.required": "Value required",
    "input.password.minlength.required": "Required length: ",
    "input.password.minlength.actual": "Current length: ",
    "input.password.tooltip": "Tooltip text",
    "input.password.event.click": "Click on the input",
    "input.password.keypressed": "Keypressed event",
    "input.password.input.label": "Label text associated with the password input",
    "input.password.input.required": "Indicates whether the input is required",
    "input.password.input.validate": "Indicates whether the password input should be validated",
    "input.password.input.name": "Name of the password input",
    "input.password.input.placeholder": "Text when the password input is empty",
    "input.password.input.readonly": "Prevents the user from typing in the password input",
    "input.password.input.disabled": "Indicates whether the password input is disabled",
    "input.password.input.inline": "Displays the label and password input on a single line",
    "input.password.input.tooltiptext": "Tooltip text of the password input",
    "input.password.input.labelbold": "Displays the label in bold",
    "input.password.input.showpassword": "Shows the password in plain text",
    "input.password.input.pattern": "Validation pattern. Only if the password input is being validated",
    "input.password.input.tooltiporientation": "Tooltip orientation",
    "input.password.output.haserrors": "Event with the type of error sent by the input group. 0=Neutral 1=Error 2=Valid",
    "input.password.output.clickinput": "Event triggered when clicking the password input",
    "input.password.output.keypressed": "Event triggered on key press and release in the input. Returns the current input value",
    "input.password.template.templatevalid": "Content when the textarea is valid",
    "input.password.template.templateerrors": "Content when the textarea is invalid",
    "input.password.input": "Password input container",
    "input.file.description": "Component that allows the user to select files",
    "input.file.example.1": "Example 1: Standard",
    "input.file.example.2": "Example 2: Multiple",
    "input.file.example.3": "Example 3: Select specific extension",
    "input.file.example.4": "Example 4: Disabled",
    "input.file.example.5": "Example 5: Inline",
    "input.file.example.6": "Example 6: Tooltip",
    "input.file.example.7": "Example 7: Bold label",
    "input.file": "File",
    "input.file.upload.file": "File uploaded",
    "input.file.upload.files": "Files uploaded",
    "input.file.tooltip": "Tooltip text",
    "input.file.input.label": "Label text associated with the file input",
    "input.file.input.name": "Name of the file input",
    "input.file.input.inline": "Displays the label and the file input on a single line",
    "input.file.input.disabled": "Indicates whether the file input is disabled",
    "input.file.input.labelbold": "Displays the label in bold",
    "input.file.input.required": "Indicates whether the input is required",
    "input.file.input.tooltiptext": "Tooltip text of the file input",
    "input.file.input.tooltipOrientation": "Tooltip orientation",
    "input.file.input.multiple": "Allows selecting multiple files at once",
    "input.file.input.accept": "Allows specifying the accepted file extensions",
    "input.file.output.fileselected": "Event triggered when a file is selected",
    "input.file.output.filesselected": "Event triggered when multiple files are selected. Only in multiple mode",
    "input.file.style.file": "File input container",
    "textarea.description": "Component that allows the user to enter data.",
    "textarea.example.1": "Example 1: Standard",
    "textarea.example.2": "Example 2: Initial value",
    "textarea.example.3": "Example 3: Validation",
    "textarea.example.4": "Example 4: Inline",
    "textarea.example.5": "Example 5: Customize rows and columns",
    "textarea.example.6": "Example 6: Tooltip",
    "textarea.example.7": "Example 7: Bold label",
    "textarea.example.8": "Example 8: Events",
    "textarea.label": "Text",
    "textarea.placeholder": "Enter some text...",
    "textarea.tooltip": "Tooltip text",
    "textarea.ok": "Valid",
    "textarea.value.required": "Required value",
    "textarea.value": "Value",
    "textarea.minlength.required": "Required length: ",
    "textarea.minlength.actual": "Current length: ",
    "textarea.event.click": "Click on the textarea",
    "textarea.keypressed": "Keypressed event",
    "textarea.event.blur": "Blur event",
    "textarea.input.placeholder": "Text when the textarea is empty",
    "textarea.input.label": "Label text associated with the textarea",
    "textarea.input.name": "Name of the textarea",
    "textarea.input.disabled": "Indicates whether the textarea is disabled",
    "textarea.input.readonly": "Prevents the user from writing in the textarea",
    "textarea.input.required": "Indicates whether the textarea is required",
    "textarea.input.maxlength": "Maximum length of the textarea",
    "textarea.input.minlength": "Minimum length of the textarea",
    "textarea.input.validate": "Indicates whether the textarea should be validated",
    "textarea.input.inline": "Displays the label and the textarea on a single line",
    "textarea.input.rows": "Specifies the number of rows in the textarea",
    "textarea.input.cols": "Specifies the number of columns in the textarea",
    "textarea.input.labelbold": "Displays the label in bold",
    "textarea.input.tooltiptext": "Tooltip text for the textarea",
    "textarea.input.tooltipOrientation": "Tooltip orientation",
    "textarea.template.templatevalid": "Content when the textarea is valid",
    "textarea.template.templateerrors": "Content when the textarea is invalid",
    "textarea.style": "Textarea container",
    "textarea.style.label": "Textarea label",
    "textarea.style.label.inline": "Inline label",
    "textarea.style.textarea": "Textarea",
    "textarea.style.textarea.inline": "Inline textarea",
    "radio.description": "Component to select one option among several using radio buttons.",
    "radio.example.1": "Example 1: Standard",
    "radio.example.2": "Example 2: Preloaded",
    "radio.example.3": "Example 3: Objects",
    "radio.example.4": "Example 4: Preloaded objects",
    "radio.example.5": "Example 5: Inline",
    "radio.value": "Value",
    "radio.input.options": "Options to display",
    "radio.input.inline": "Display the radio buttons inline",
    "radio.output.clickradio": "Event when clicking on a radio button",
    "radio.style": "Main container",
    "radio.style.container": "Radio container",
    "radio.style.container.input": "Radio input container",
    "radio.style.container.input.active": "When the radio is active",
    "radio.style.container.input.desactive": "When the radio is inactive",
    "checkbox.description": "Component to select multiple options using checkboxes.",
    "checkbox.example.1": "Example 1: Standard",
    "checkbox.example.2": "Example 2: Preloaded",
    "checkbox.example.3": "Example 3: Objects",
    "checkbox.example.4": "Example 4: Preloaded object",
    "checkbox.example.5": "Example 5: Inline",
    "checkbox.example.6": "Example 6: Disabled",
    "checkbox.value": "Value",
    "checkbox.input.options": "Options to display",
    "checkbox.input.disabled": "Disables the checkboxes",
    "checkbox.input.inline": "Displays the checkboxes inline",
    "checkbox.output.clickcheck": "Event triggered when clicking a checkbox",
    "checkbox.style.checkbox": "Main container",
    "checkbox.style.container": "Checkbox container",
    "checkbox.style.input": "Checkbox input container",
    "checkbox.style.input.active": "When the checkbox is active",
    "checkbox.style.input.desactive": "When the checkbox is inactive",
    "checkbox.style.input.disabled": "When the input is disabled",
    "checkbox.style.container.label": "Checkbox label",
    "checkbox.binary.description": "Component to select an option in a binary way (True or False).",
    "checkbox.binary.example.1": "Example 1: Standard",
    "checkbox.binary.example.2": "Example 2: Disabled",
    "checkbox.binary.example.3": "Example 3: Event",
    "checkbox.binary.label": "I accept all terms and conditions",
    "checkbox.binary.value": "Value",
    "checkbox.binary.input.disabled": "Disables the checkbox",
    "checkbox.binary.input.label": "Text of the label associated with the checkbox",
    "checkbox.binary.output.clickcheck": "Event triggered when clicking the checkbox",
    "checkbox.binary.style.binary": "Main container of the binary checkbox",
    "dropdown.description": "Component to select different options with filtering capabilities.",
    "dropdown.example.1": "Example 1: Standard",
    "dropdown.example.2": "Example 2: Preloaded",
    "dropdown.example.3": "Example 3: Objects",
    "dropdown.example.4": "Example 4: Preloaded object",
    "dropdown.example.5": "Example 5: Template",
    "dropdown.example.6": "Example 6: Label",
    "dropdown.example.7": "Example 7: Inline",
    "dropdown.example.8": "Example 8: No filter",
    "dropdown.example.9": "Example 9: Orientation",
    "dropdown.example.10": "Example 10: Reset",
    "dropdown.example.11": "Example 11: Disabled",
    "dropdown.example.12": "Example 12: Deselect",
    "dropdown.example.13": "Example 13: Modal",
    "dropdown.example.14": "Example 14: Do not close on select",
    "dropdown.example.15": "Example 15: Tooltip",
    "dropdown.example.16": "Example 16: Validation",
    "dropdown.example.17": "Example 17: Transparent",
    "dropdown.placeholder": "Select an option",
    "dropdown.no.items": "No results to show",
    "dropdown.filter.placeholder": "Type to filter items...",
    "dropdown.reset.value": "Reset value",
    "dropdown.reset.options": "Reset options",
    "dropdown.tooltip": "Dropdown tooltip",
    "dropdown.ok": "Valid",
    "dropdown.value.required": "Required",
    "dropdown.value": "Value",
    "dropdown.label": "Label",
    "dropdown.input.options": "Dropdown options",
    "dropdown.input.showfilter": "Indicates whether to show the filter",
    "dropdown.input.label": "Label associated with the dropdown",
    "dropdown.input.inline": "Display label and dropdown inline",
    "dropdown.input.validate": "Validate the dropdown",
    "dropdown.input.orientation": "Options orientation",
    "dropdown.input.labelplaceholderfilter": "Placeholder of the filter input",
    "dropdown.input.labelNoResults": "Text when there are no items in the dropdown",
    "dropdown.input.disabled": "Disable the dropdown",
    "dropdown.input.placeholder": "Text of the dropdown input when empty",
    "dropdown.input.required": "Indicates whether the dropdown is required",
    "dropdown.input.translate": "Indicates if the label should be translated with DdrTranslate",
    "dropdown.input.modaloptions": "Display options in a modal",
    "dropdown.input.tooltipOrientation": "Tooltip orientation",
    "dropdown.input.tooltiptext": "Tooltip text",
    "dropdown.input.closeonselect": "Close options when selecting an item",
    "dropdown.input.allowdeselect": "Allow deselecting an item",
    "dropdown.input.comparefn": "Custom function to compare two items. Ideal for objects",
    "dropdown.input.transparent": "Makes the dropdown transparent",
    "dropdown.input.name": "Name dropdown",
    "dropdown.output.selectitem": "Event when selecting an item",
    "dropdown.translation.no.results": "Text when there are no items in the dropdown",
    "dropdown.template.itemtemplate": "Content of each option",
    "dropdown.template.templatevalid": "Content when the textarea is correct",
    "dropdown.template.templateerrors": "Content when the textarea is incorrect",
    "dropdown.style.dropdown": "Dropdown container",
    "dropdown.style.selectionable": "Selectable dropdown",
    "dropdown.style.panel.items": "Container for dropdown options",
    "dropdown.style.panel.items.top": "Container for options when opened from the top",
    "dropdown.style.panel.items.modal": "Container for options when in a modal",
    "dropdown.style.panel.items.search": "Filter container",
    "dropdown.style.panel.items.search.input": "Filter input",
    "dropdown.style.panel.items.no.results": "When there is no data",
    "dropdown.style.panel.items.no.results.no.filter": "When there is no data and no filter applied",
    "dropdown.style.panel.items.with.filter": "Options when filter is applied",
    "dropdown.style.panel.items.item": "Item for each option",
    "dropdown.style.panel.items.item.active": "When the option is active",
    "dropdown.multiple.description": "Component to select multiple options with filtering.",
    "dropdown.multiple.example.1": "Example 1: Standard",
    "dropdown.multiple.example.2": "Example 2: Preloaded",
    "dropdown.multiple.example.3": "Example 3: Objects",
    "dropdown.multiple.example.4": "Example 4: Preloaded object",
    "dropdown.multiple.example.5": "Example 5: Reset",
    "dropdown.multiple.example.6": "Example 6: Disabled",
    "dropdown.multiple.example.7": "Example 7: Modal",
    "dropdown.multiple.example.8": "Example 8: No filter",
    "dropdown.multiple.example.9": "Example 9: Label",
    "dropdown.multiple.example.10": "Example 10: Tooltip",
    "dropdown.multiple.example.11": "Example 11: Orientation",
    "dropdown.multiple.example.12": "Example 12: Template",
    "dropdown.multiple.example.13": "Example 13: Dynamic options change",
    "dropdown.multiple.example.14": "Example 14: Validation",
    "dropdown.multiple.example.15": "Example 15: Transparent",
    "dropdown.multiple.placeholder": "Select one or multiple options",
    "dropdown.multiple.no.items": "No results to display",
    "dropdown.multiple.filter.placeholder": "Type to filter items...",
    "dropdown.multiple.value": "Value",
    "dropdown.multiple.reset": "Reset",
    "dropdown.multiple.reset.confirm": "Values reset",
    "dropdown.multiple.label": "Label",
    "dropdown.multiple.tooltip": "Multiple dropdown tooltip",
    "dropdown.multiple.change.options": "Change options",
    "dropdown.multiple.change.options.confirm": "Options changed",
    "dropdown.multiple.ok": "Valid",
    "dropdown.multiple.value.required": "Required",
    "dropdown.multiple.input.options": "Multiple dropdown options",
    "dropdown.multiple.input.showfilter": "Indicates if filter is shown",
    "dropdown.multiple.input.label": "Label associated with multiple dropdown",
    "dropdown.multiple.input.inline": "Shows label and multiple dropdown inline",
    "dropdown.multiple.input.orientation": "Options orientation",
    "dropdown.multiple.input.labelplaceholderfilter": "Filter input placeholder",
    "dropdown.multiple.input.labelnoresults": "Text when no items are found in multiple dropdown",
    "dropdown.multiple.input.disabled": "Disables the multiple dropdown",
    "dropdown.multiple.input.placeholder": "Input text when multiple dropdown is empty",
    "dropdown.multiple.input.required": "Indicates if dropdown is required",
    "dropdown.multiple.input.validate": "Validates the dropdown",
    "dropdown.multiple.input.translate": "Indicates if the label should be translated with DdrTranslate",
    "dropdown.multiple.input.modaloptions": "Shows options in a modal",
    "dropdown.multiple.input.tooltipOrientation": "Tooltip orientation",
    "dropdown.multiple.input.tooltiptext": "Tooltip text",
    "dropdown.multiple.input.comparefn": "Custom function to compare two elements. Ideal for objects",
    "dropdown.multiple.input.transparent": "Makes the multiple dropdown transparent",
    "dropdown.multiple.input.name": "Name multiple dropdown",
    "dropdown.multiple.output.selectitems": "Event when selecting options in the multiple dropdown",
    "dropdown.multiple.translation.no.results": "Text when no items are found in multiple dropdown",
    "dropdown.multiple.template.itemtemplate": "Content of each option",
    "dropdown.multiple.template.templatevalid": "Content when textarea is valid",
    "dropdown.multiple.template.templateerrors": "Content when textarea is invalid",
    "dropdown.multiple.style.dropdown": "Multiple dropdown container",
    "progressbar.description": "Component to display a progress bar.",
    "progressbar.example.1": "Example 1: Standard",
    "progressbar.example.2": "Example 2: Label",
    "progressbar.example.3": "Example 3: Striped",
    "progressbar.example.4": "Example 4: Height",
    "progressbar.example.5": "Example 5: Animation",
    "progressbar.example.6": "Example 6: Floating text",
    "progressbar.increase": "Increase",
    "progressbar.decrease": "Decrease",
    "progressbar.input.value": "Value of the progress bar. If the value is greater than 100, it will remain full. If the value is less than 0, it will remain empty.",
    "progressbar.input.label": "Text to be displayed on the progress bar",
    "progressbar.input.height": "Height of the progress bar",
    "progressbar.input.striped": "Striped style",
    "progressbar.input.animated": "Animated progress bar",
    "progressbar.input.floattext": "The text of the progress bar stays in the middle of the progress bar",
    "progressbar.style.progressbar": "Progress bar container",
    "progressbar.style.float.text": "Progress bar text",
    "progressbar.style.float.text.less.50": "Text when the progress bar value is less than 50",
    "progressbar.style.float.text.greather.50": "Text when the progress bar value is greater than 50",
    "login.component.description": "Component to perform a login.",
    "login.component.example.1": "Example 1: Standard",
    "login.component.example.2": "Example 2: Non-required fields",
    "login.component.example.3": "Example 3: Create user link",
    "login.component.example.4": "Example 4: Forgot password link",
    "login.component.example.5": "Example 5: Create user and forgot password links",
    "login.component.example.6": "Example 6: Header",
    "login.component.example.7": "Example 7: Without labels",
    "login.component.example.8": "Example 8: Footer",
    "login.component.username": "Username",
    "login.component.password": "Password",
    "login.component.create.user": "Create user",
    "login.component.forgoten.password": "Forgot your password?",
    "login.component.placeholder.username": "Enter your username...",
    "login.component.placeholder.password": "Enter your password...",
    "login.component.submit": "Log in",
    "login.click.forgoten.password": "Click on forgot password",
    "login.click.register.user": "Click on user registration",
    "login.component.user.ok": "Valid username",
    "login.component.password.ok": "Valid password",
    "login.component.user.value.required": "Username required",
    "login.component.password.value.required": "Password required",
    "login.component.footer": "Login footer",
    "login.component.header": "Login header",
    "login.component.input.showforgotpassword": "Displays the forgot password link",
    "login.component.input.showcreateuser": "Displays the create user link",
    "login.component.input.showheader": "Displays the login header",
    "login.component.input.showfooter": "Displays the login footer",
    "login.component.input.showlabeluser": "Displays the username label",
    "login.component.input.showlabelpassword": "Displays the password label",
    "login.component.input.userrequired": "Indicates if the username is required",
    "login.component.input.userpassword": "Indicates if the password is required",
    "login.component.input.labelsubmit": "Text for the submit button",
    "login.component.input.labelforgotenpassword": "Text for the forgot password link",
    "login.component.input.labelcreateuser": "Text for the create user link",
    "login.component.input.labelusername": "Text for the username label",
    "login.component.input.labelplaceholderusername": "Text for the username placeholder",
    "login.component.input.labelpassword": "Text for the password label",
    "login.component.input.labelplaceholderpassword": "Text for the password placeholder",
    "login.component.output.dologin": "Event triggered when clicking the login button",
    "login.component.output.forgotenpassword": "Event triggered when clicking the forgot password link",
    "login.component.output.registeruser": "Event triggered when clicking the create user link",
    "login.component.slot.login.header": "Content of the login header",
    "login.component.slot.login.footer": "Content of the login footer",
    "login.component.translation.login.username": "Text of the username label",
    "login.component.translation.login.placeholder.username": "Text of the username placeholder",
    "login.component.translation.login.password": "Text of the password label",
    "login.component.translation.login.placeholder.password": "Text of the password placeholder",
    "login.component.translation.login.submit": "Text of the login button",
    "login.component.translation.login.forgot.password": "Text of the forgot password link",
    "login.component.translation.login.create.user": "Text of the create user link",
    "login.component.style": "Login container",
    "login.component.style.user.input": "Login user input container",
    "login.component.style.input.password": "Login password input container",
    "login.component.style.submit.button": "Login submit button container",
    "loop.number.description": "Pipe to loop from 0 to n with a for loop without needing arrays or objects.",
    "loop.number.example.1": "Example 1: Standard",
    "loop.number.example.2": "Example 2: Negative numbers",
    "loop.number.example.3": "Example 3: Nested",
    "loop.number.example.4": "Example 4: Reversed",
    "loop.number.example.5": "Example 5: Step",
    "loop.number.example.6": "Example 6: Include last element",
    "safe.description": "Pipe to sanitize dynamic content in Angular.",
    "safe.example.1": "Example 1: HTML",
    "safe.example.2": "Example 2: Styles",
    "safe.example.3": "Example 3: URL",
    "safe.example.4": "Example 4: Resource URL",
    "nested.property.description": "Pipe to get a property inside an object or array.",
    "nested.property.example.1": "Example 1: Standard",
    "nested.property.example.2": "Example 2: Empty object",
    "nested.property.example.3": "Example 3: Nested path",
    "nested.property.example.4": "Example 4: Array",
    "nested.property.example.5": "Example 5: Array of objects",
    "nested.property.example.6": "Example 6: Array inside an object",
    "nested.property.example.7": "Example 7: Array inside an array of objects",
    "badge.notification.description": "Directive to display a number of notifications.",
    "badge.notification.example.1": "Example 1: Standard",
    "badge.notification.example.2": "Example 2: Exceeding the limit (1 digit)",
    "badge.notification.example.3": "Example 3: Exceeding the limit (2 digits)",
    "badge.notification.example.4": "Example 4: Icon",
    "badge.notification.example.5": "Example 5: Show/Hide notifications",
    "badge.notification.example.6": "Example 6: Specify position and element where to place the notification",
    "badge.notification.input.shownotifications": "Displays the notifications",
    "badge.notification.input.numbernotifications": "Number of notifications",
    "badge.notification.input.limitnotifications": "Notification limit",
    "badge.notification.input.elementtoinsert": "Specifies the element where the notification should be added. Useful for inner elements or elements with fixed positions",
    "badge.notification.input.positiontop": "Allows customizing the top position of the notification",
    "badge.notification.input.positionright": "Allows customizing the right position of the notification",
    "badge.notification.text": "Notifications button",
    "badge.notification.show.notifications": "Show notifications",
    "badge.notification.hide.notifications": "Hide notifications",
    "badge.notification.notification": "Notification container",
    "clickoutside.description": "Directive to detect if a click occurs outside the element.",
    "clickoutside.standard": "Standard",
    "clickoutside.delay": "Delay",
    "clickoutside.disactivated": "Deactivated",
    "clickoutside.standard.click": "Click outside this div to trigger the clickOutside directive",
    "clickoutside.delay.click": "Click outside this div to trigger the clickOutside directive. It will take 5 seconds to activate",
    "clickoutside.disactivated.click": "The clickOutside directive is deactivated even if you click outside this div",
    "clickoutside.event.click": "You clicked outside the div",
    "clickoutside.input.clickoutsidedelay": "Delays triggering the event by x milliseconds",
    "clickoutside.input.clickoutsideenabled": "Indicates whether to trigger the event when clicking outside the element",
    "clickoutside.output.clickoutside": "Event triggered when clicking outside the element",
    "clipboard.description": "Directive to copy text to the clipboard.",
    "clipboard.example.1": "Example 1: Standard",
    "clipboard.example.2": "Example 2: Select a child element as the directive trigger",
    "clipboard.copy": "Copy to clipboard",
    "clipboard.copy.success": "Text copied. Ahora puedes pegar el texto",
    "clipboard.input.clipboard": "Text to copy to the clipboard.",
    "clipboard.input.clipboardtrigger": "Specifies the element to which the directive should be applied. If not provided, it will use the element where the directive is placed",
    "drag.drop.description": "Directive that enables drag and drop for file uploads.",
    "drag.drop.example.1": "Example 1: Standard",
    "drag.drop.message": "Drag files here",
    "drag.drop.disabled": "Disable drag and drop",
    "drag.drop.active": "Enable drag and drop",
    "drag.drop.input.dragdropenabled": "Indicates whether drag and drop functionality is enabled or not.",
    "drag.drop.output.dragdropfiles": "Event triggered when files are dropped",
    "load.iframe.description": "Directive that indicates when an iframe has loaded its content. Can only be used on iframes.",
    "load.iframe.example.1": "Example 1: Standard",
    "load.iframe.success": "Iframe loaded",
    "load.iframe.output.loadiframe": "Event triggered when the iframe loads",
    "skeleton.description": "Directive to display a skeleton in a block to indicate that it is loading.",
    "skeleton.example.1": "Example 1: Directive",
    "skeleton.cirle": "Circle",
    "skeleton.rectangle": "Rectangle",
    "skeleton.square": "Square",
    "skeleton.card": "Card",
    "skeleton.list": "List",
    "skeleton.graphic": "Graphic",
    "skeleton.load.data": "Load data",
    "skeleton.number.elements": "Number of elements",
    "skeleton.time.load": "Loading time (ms)",
    "skeleton.data.loaded": "Data loaded",
    "skeleton.input.skeletonwidth": "Specifies the skeleton width",
    "skeleton.input.skeletonheight": "Specifies the skeleton height",
    "skeleton.input.skeletonborderradius": "Specifies the skeleton border radius",
    "tooltip.description": "Directive to display a tooltip.",
    "tooltip.example.1": "Example 1: Standard",
    "tooltip.example.2": "Example 2: Underlined",
    "tooltip.example.3": "Example 3: Orientation",
    "tooltip.example.4": "Example 4: Lots of text",
    "tooltip.example.5": "Example 5: Icons",
    "tooltip.example.6": "Example 6: Width",
    "tooltip.example.7": "Example 7: Template",
    "tooltip.template": "Tooltip template",
    "tooltip.input.tooltiptext": "Tooltip text",
    "tooltip.input.tooltipwidth": "Customizable tooltip width. Only valid CSS measurements",
    "tooltip.input.tooltiptemplate": "Allows using the content of a template in the tooltip",
    "tooltip.input.tooltiptemplatedata": "Allows passing data to the tooltip template",
    "tooltip.input.tooltipunderline": "Underlines the element that has a tooltip",
    "tooltip.input.tooltiporientation": "Specifies the tooltip orientation",
    "tooltip.style": "Tooltip container",
    "tooltip.style.top": "Tooltip at the top",
    "tooltip.style.bottom": "Tooltip at the bottom",
    "tooltip.style.left": "Tooltip on the left",
    "tooltip.style.right": "Tooltip on the right",
    "spinner.description": "Service to display a spinner on the screen.",
    "spinner.example.1": "Example 1: Standard",
    "spinner.example.2": "Example 2: Change spinner",
    "spinner.show": "Show spinner",
    "spinner.style": "Spinner container",
    "spinner.style.overlay": "Overlay spinner",
    "spinner.style.overlay.embedded": "Embedded overlay spinner",
    "spinner.style.overlay.spinner": "Spinner container inside overlay",
    "spinner.style.overlay.spinner.embedded": "Spinner container inside embedded overlay",
    "spinner.style.spinner.default": "Default spinner",
    "toast.description": "Component to display toasts with information; with its service, we can show them.",
    "toast.info": "Information",
    "toast.danger": "Danger",
    "toast.warning": "Warning",
    "toast.success": "Success",
    "toast.orientation": "Orientation",
    "toast.maxtoasts": "Maximum toasts",
    "toast.timeout": "Timeout (ms)",
    "toast.show.toast": "Show toast",
    "toast.title": "Title",
    "toast.content": "Content",
    "toast.style.container": "Main container for toasts",
    "toast.style.container.top.right": "Toasts at the top right",
    "toast.style.container.top.left": "Toasts at the top left",
    "toast.style.container.bottom.right": "Toasts at the bottom right",
    "toast.style.container.bottom.left": "Toasts at the bottom left",
    "toast.style.container.toast": "Individual toast container",
    "toast.style.container.toast.info": "Informational toast",
    "toast.style.container.toast.warning": "Warning toast",
    "toast.style.container.toast.danger": "Error or danger toast",
    "toast.style.container.toast.success": "Success toast",
    "toast.style.container.toast.title": "Toast title",
    "toast.style.container.toast.title.message": "Message inside the toast title",
    "toast.style.container.toast.title.icon": "Icon inside the toast title",
    "toast.style.container.toast.title.content": "Content of the toast below the title",
    "spinner.block.description": "Directive to display a spinner inside a block",
    "spinner.block.example.1": "Example 1: Standard",
    "spinner.block.example.2": "Example 2: Change spinner",
    "spinner.block.example.3": "Example 3: Multiple spinners",
    "spinner.block.example.4": "Example 4: Defined height",
    "spinner.block.data.load": "Load data",
    "spinner.block.data.loaded": "Data loaded",
    "spinner.block.spinnershow": "Shows the embedded spinner",
    "spinner.block.spinnerpathimg": "Changes the embedded spinner",
    "translate.pipe.description": "Pipe used to translate into different languages.",
    "translate.pipe.example.1": "Example 1: Standard",
    "translate.pipe.example": "Translation example. Change the language to see it in another language",
    "translate.description": "Service to manage translations.",
    "translate.example.1": "Example 1: Standard",
    "translate.example": "Show translation",
    "translate.example.show": "Translation example",
    "toggle.description": "Component to display a toggle, ideal for boolean values.",
    "toggle.example.1": "Example 1: Standard",
    "toggle.example.2": "Example 2: Label",
    "toggle.example.3": "Example 3: Inline",
    "toggle.example.4": "Example 4: Size",
    "toggle.example.5": "Example 5: Tooltip",
    "toggle.example.6": "Example 6: Activated",
    "toggle.label": "Toggle",
    "toggle.value": "Value",
    "toggle.tooltip": "Toggle tooltip",
    "toggle.input.label": "Label associated with the toggle",
    "toggle.input.inline": "Displays the label and toggle inline",
    "toggle.input.tooltiptext": "Tooltip for the toggle",
    "toggle.input.tooltiporientation": "Orientation of the toggle",
    "toggle.input.size": "Size of the toggle",
    "toggle.output.toggled": "Event triggered when the toggle changes",
    "toggle.style": "Toggle container",
    "toggle.style.inline": "Inline toggle",
    "toggle.style.label": "Toggle label",
    "toggle.style.label.inline": "Inline toggle label",
    "toggle.style.button": "Toggle button",
    "toggle.style.button.on": "Toggle when active",
    "toggle.style.button.off": "Toggle when inactive",
    "toggle.style.button.small": "Small toggle",
    "toggle.style.button.medium": "Medium toggle",
    "toggle.style.button.large": "Large toggle",
    "changelog.version": "Version",
    "versions.filter": "Version...",
    "get.started.p1": "What is the ddr component library?",
    "get.started.p2": "It is a set of reusable components, services, pipes, and directives for our projects.",
    "get.started.p3": "How to install ddr-ng",
    "get.started.p4": "To install the ddr library, run the following command:",
    "get.started.p5": "What should we include in the angular.json file?",
    "get.started.p6": "We will add the following in styles:",
    "get.started.p7": "If you want to have all available themes, you can add them all in styles",
    "get.started.p8": "In the main container, you must add the class of the theme being used",
    "get.started.p9": "In app.config, it is recommended to add provideHttpClient() in providers",
    "get.started.p10": "Now you can use everything exported from the library, check the showcases for examples.",
    "get.started.copy": "Copy",
    "get.started.copy.text": "Code copied",
    "themes.p1": "Change theme dynamically",
    "themes.p2": "If you want to change the theme dynamically, you must import the DdrThemeService in the component's providers.",
    "themes.p3": "Using the service's setTheme method, we can change the current theme.",
    "themes.p4": "A value of type DdrTheme must be passed.",
    "themes.p5": "Get current theme",
    "themes.p6": "With the getTheme method we can obtain the current theme.",
    "themes.p7": "Customize styles of the ddr-ng library components",
    "themes.p8": "If you use components from the ddr-ng library, you can adapt their styles to your liking. It’s important that your component has no encapsulation.",
    "themes.p9": "In your component’s stylesheet, you can now change the styles.",
    "translate.page.p1": "How to translate our application with DdrTranslateService",
    "translate.page.p2": "The DdrTranslateService and DdrTranslatePipe allow us to translate texts, but first we need to configure our application.",
    "translate.page.p3": "Inside the public folder, create an i18n folder with a JSON file for each language you want to translate.",
    "translate.page.p4": "Content of these files:",
    "translate.page.p5": "In the app.config.ts file we must add provideHttpClient() and provideAppInitializer().",
    "translate.page.p6": "Inside provideAppInitializer() we will call the getData method, passing the folder path and the chosen language. If we don’t pass a language, it will use the browser’s language.",
    "translate.page.p7": "Now we can translate in our components. Depending on the active language, it will use one file or another.",
    "translate.page.p8": "How to change the language dynamically",
    "translate.page.p9": "To change the language dynamically, we need to use the getData method from the DdrTranslateService.",
    "spanish": "Spanish",
    "english": "English",
    "french": "French",
    "italian": "Italian",
    "success": "Success",
    "error": "Error",
    "small": "Small",
    "medium": "Medium",
    "large": "Large",
    "menu.components": "Components",
    "menu.data": "Data",
    "menu.buttons": "Buttons",
    "menu.form": "Form",
    "menu.others": "Others",
    "menu.directives": "Directives",
    "menu.services": "Services",
    "menu.pipes": "Pipes",
    "header.get.started": "Get started",
    "header.github": "Github",
    "header.themes": "Themes and CSS",
    "header.discord": "Discord",
    "header.translate": "Translate",
    "header.changelog": "Changelog",
    "19.0.2.change.1": "- Angular 19 support",
    "20.0.2.change.1": "- Angular 20 support"
}